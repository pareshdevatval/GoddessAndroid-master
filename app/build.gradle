apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
/*apply plugin: 'io.fabric'*/

android {
    signingConfigs {
        myConfig {
            storeFile file('E:\\Imd\\GoddessAndroid-master\\goddess_keystore.jks')
            storePassword '12345678'
            keyPassword '12345678'
            keyAlias 'goddess'
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.krystal.goddesslifestyle"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 15
        versionName "1.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.myConfig
        // ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
    }
    /*[START] Various buildTypes*/
    buildTypes {
        debug {
             signingConfig signingConfigs.debug
            buildConfigField("String", "BASE_URL", "\"http://goddess.reviewprototypes.com/api/v1/\"")
            buildConfigField("String", "IMAGE_BASE_URL", "\"http://goddess.reviewprototypes.com/public/image.php?url=\"")
            buildConfigField("String", "VIDEO_BASE_URL", "\"http://goddess.reviewprototypes.com/public/uploads/\"")
        }
        release {
            signingConfig signingConfigs.myConfig
            debuggable true
            //minifyEnabled true
            //shrinkResources true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
           // buildConfigField("String", "BASE_URL", "\"https://goddesslifeapp.com/admin/api/v1/\"")
            buildConfigField("String", "BASE_URL", "\"http://goddess.reviewprototypes.com/api/v1/\"")
            buildConfigField("String", "IMAGE_BASE_URL", "\"https://goddesslifeapp.com/admin/public/image.php?url=\"")
            buildConfigField("String", "VIDEO_BASE_URL", "\"https://goddesslifeapp.com/admin/public/uploads/\"")
        }
    }
    /*[END] Various buildTypes*/
    /*[START] Providing JAVA 8 Compatibility*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    // Add for using latest experimental build of Android Extensions
    androidExtensions {
        experimental = true
    }
    /*[END] Providing JAVA 8 Compatibility*/

    /*Enabling Data Binding*/
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':rxdownload4')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    /*[START] custom dependencies*/
    def lifecycle_version = "2.2.0"
    def image_cropper = "2.7.0"
    def room_version = '1.1.1'
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // Retrofit and its Gson converter
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    // OkHttp interceptor for retrofit API calling logging
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.2.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    // RxJava and RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    // RxJava Adapter for Retrofit
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    // Glide Image loading library
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    // sdp and ssp library for mutli-resolution screen support(dimensions, text)
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    /*AndroidX material design library*/
    implementation 'com.google.android.material:material:1.1.0'
    /*Dagger 2*/
    implementation 'com.google.dagger:dagger:2.24'
    implementation 'com.google.dagger:dagger-android:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    kapt 'com.google.dagger:dagger-android-processor:2.16'

    /*Image cropper*/
    implementation "com.theartofdev.edmodo:android-image-cropper:$image_cropper"

    // Room
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    // Viewpager dot indicator
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'

    /*video player*/
    implementation 'com.google.android.exoplayer:exoplayer-core:2.10.0'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.10.0'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.10.0'

    /*login with facebook*/
    implementation 'com.facebook.android:facebook-android-sdk:5.15.3'

    /*implementation 'com.miguelcatalan:materialsearchview:1.4.0'*/

    /*Tab layout custom*/
    implementation 'com.github.Yalantis:ColorMatchTabsAndroid:v0.0.1'

    /*Android Billing library for Subscriptions in App purchase*/
    implementation 'com.android.billingclient:billing:2.2.0'
    /*Billing kotlin library for coroutines and kotlin extensions*/
    implementation 'com.android.billingclient:billing-ktx:2.1.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'

    //implementation 'com.github.tcking:giraffecompressor:0.1.4'
    /*
    Ring Progress used for my profile activty
    https://github.com/HotBitmapGG/RingProgressBar*/
    implementation 'com.github.HotBitmapGG:RingProgressBar:V1.2.3'

    /*this library used OrderStatusActivity
    https://github.com/vipulasri/Timeline-View*/
    implementation 'com.github.vipulasri:timelineview:1.1.4'


    implementation 'com.google.android.gms:play-services-auth:18.0.0'

    /*Stripe payment dependency*/
    implementation 'com.stripe:stripe-android:13.2.0'
    //implementation 'com.stripe:stripe-android:13.2.0'

    /*google place api*/
    implementation 'com.google.android.libraries.places:places:2.2.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'


    /*fcm*/
    implementation 'com.google.firebase:firebase-messaging:20.1.6'

    /*compile('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true;
    }*/
    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics:17.4.0'
    /*// Add the Firebase Crashlytics dependency.
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'*/
    // Add the Firebase SDK for Crashlytics.
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'

    implementation 'com.github.AbedElazizShe:LightCompressor:0.1.0'

}
apply plugin: 'com.google.gms.google-services'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'
